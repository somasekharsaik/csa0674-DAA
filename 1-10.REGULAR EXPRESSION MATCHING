def is_match(s, p):
    m, n = len(s), len(p)
    dp = [[False] * (n + 1) for _ in range(m + 1)]
    dp[0][0] = True

    # Initialize the first row (empty string s)
    for j in range(1, n + 1):
        if p[j - 1] == '*':
            dp[0][j] = dp[0][j - 2]

    # Fill in the rest of the DP table
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if p[j - 1] == s[i - 1] or p[j - 1] == '.':
                dp[i][j] = dp[i - 1][j - 1]
            elif p[j - 1] == '*':
                dp[i][j] = dp[i][j - 2] or (dp[i - 1][j] and (s[i - 1] == p[j - 2] or p[j - 2] == '.'))

    return dp[m][n]

# Example usage
s1, p1 = "aa", "a"
print(f"Input: s = '{s1}', p = '{p1}', Output: {is_match(s1, p1)}")

s2, p2 = "aa", "a*"
print(f"Input: s = '{s2}', p = '{p2}', Output: {is_match(s2, p2)}")

s3, p3 = "ab", ".*"
print(f"Input: s = '{s3}', p = '{p3}', Output: {is_match(s3, p3)}")
